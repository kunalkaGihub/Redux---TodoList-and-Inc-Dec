{"version":3,"sources":["components/Todo.js","actions/index.js","App.js","reportWebVitals.js","reducers/incDec.js","reducers/todoReducers.js","reducers/index.js","store.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","useSelector","state","todoReducers","dispatch","useDispatch","className","class","type","placeholder","value","onChange","event","target","style","width","onClick","data","payload","id","Date","getTime","toString","map","item","App","myState","changeTheNumber","title","name","readOnly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","initialData","newList","filter","elem","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90715f57.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport { addTodo, deleteTodo, removeTodo } from '../actions/index'\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../App.css';\n\nconst Todo = () => {\n    \n    const [inputData, setInputData] = useState(\"\")\n    const list = useSelector((state) => state.todoReducers.list)  //store se data kese get krna \n    const dispatch = useDispatch()\n\n    return (\n       \n        <>\n        {/* <div className=\"main-div container my-5\">\n            <div className=\"child-div\">\n                <figure>\n                <figcaption>Add Your List Here ✌️</figcaption>\n                </figure>\n\n                <div className=\"add-items\">\n                 */}\n                {/* inputData k andr sara data h or onChange ki help se get kr rhe h */}\n                {/* <input type=\"text\" placeholder=\"✍️ Add Items...\" \n                value={inputData} onChange={(event)=> \n                setInputData(event.target.value)}/>\n\n                <i className=\"fa fa-plus\" onClick={() => dispatch(addTodo(inputData), setInputData(\"\"))}></i>\n                </div>\n\n                <div className=\"container showitems\">\n                    {\n                        list.map((item)=>{\n                            return (\n                            <div className=\"eactItem\" key={item.id}>\n                                <h3>{item.data} */}\n                                {/* <i className=\"fa fa-trash mx-5\" onClick={() => dispatch(deleteTodo(item.id))}></i>\n                                </h3>\n                            </div>\n                            )\n                        })\n                    }\n                </div>\n                 */}\n                {/* <div className=\"container removeitems\">\n                    <button className=\"btn btn-sm btn-primary\" onClick={()=> dispatch(removeTodo())}>Remove all</button>\n                </div>\n\n            </div>\n        </div> */}\n\n        <div className=\"container my-5\">\n        <h3>Add Your List Here</h3>\n            <div class=\"mb-3 input-group\">\n                \n                {/* inputData k andr sara data h or onChange ki help se get kr rhe h */}\n                <input type=\"text\" className=\"form-control\" placeholder=\"✍️ Add Items...\" \n                value={inputData} onChange={(event)=> \n                setInputData(event.target.value)}/>\n\n                <button className=\"btn btn-sm btn-success\" style={{width:\"12%\"}} onClick={() => dispatch(addTodo(inputData), setInputData(\"\"))}>\n                    <i className=\"fa fa-plus\"></i>\n                </button>\n\n               \n            </div>\n                <div className=\"container showitems\">\n                    {\n                        list.map((item)=>{\n                            return (\n                            <div className=\"eactItem\" key={item.id}>\n                                <h3>{item.data}\n                                <i className=\"fa fa-trash mx-5\" onClick={() => dispatch(deleteTodo(item.id))}></i>\n                                </h3>\n                            </div>\n                            )\n                        })\n                    }\n                </div>\n            <button className=\"btn-sm btn-primary\" onClick={()=> dispatch(removeTodo())}>Remove all</button>\n        </div>\n        </>\n    )\n}\n\nexport default Todo\n","export const incNumber = () =>{\n    return {\n        type:\"INCREMENT\"\n    }\n}\n\nexport const decNumber = () =>{\n    return {\n        type:\"DECREMENT\"\n    }\n}\n\nexport const addTodo = (data) =>{ // yeh data todo me plus me click krne pe aa rha h\n    return{\n        type:\"ADD_TODO\",\n        payload:{\n            id: new Date().getTime().toString(),\n            data:data\n        }\n    }\n}\n\nexport const deleteTodo = (id) =>{\n    return{\n        type:\"DELETE_TODO\",\n        id:id  //payload\n    }\n}\n\nexport const removeTodo = () =>{\n    return{\n        type:\"REMOVE_TODO\"\n    }\n}","import './App.css';\nimport { useSelector, useDispatch} from \"react-redux\"\nimport { incNumber, decNumber } from './actions/index';\nimport Todo from './components/Todo';\n\nconst App = () => {\n\n  const myState = useSelector((state) => state.changeTheNumber)\n  const dispatch = useDispatch();\n  \n  return (\n    <>\n    <h1 className=\"text-center\">using React and Redux</h1>\n    <div className=\"container my-5\">\n      <h2>Increment/Decrement Counter</h2>\n\n      <div className=\"quantity input-group\">\n        <a onClick={()=> dispatch(decNumber())} className=\"btn btn-primary\" title=\"Decrement\">-</a>\n        <input type=\"text\" name=\"quantity\" className=\"quantity_input text-center\" value={myState} readOnly/>\n        <a onClick={()=> dispatch(incNumber())} title=\"Increment\" className=\"btn btn-primary\">+</a>\n      </div>\n    </div>\n    \n    <Todo/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState =0;\nconst changeTheNumber = (state= initialState, action) =>{\n    switch(action.type) {\n        case \"INCREMENT\": return state + 1;\n        case \"DECREMENT\": return state - 1;\n        default: return state;\n    }\n}\n\nexport default changeTheNumber;","import React from 'react'\nconst initialData = {\n    list:[]\n}\n\nconst todoReducers = (state=initialData, action) => {\n    switch (action.type){\n        \n        case \"ADD_TODO\": \n\n        const { id, data } = action.payload // yeh action se aa rhi hai\n        \n        return {\n            ...state, //initial data : initial state ko get kr rhe spread operator se\n            list:[  // current data ko get krna hai in the form of array\n                \n                ...state.list, //previous state ka data... ky pta pehle se kuch ho\n                {   \n                    id:id,      //yeh new data\n                    data:data\n                }\n            ]\n            \n        }\n        \n        case \"DELETE_TODO\":\n            \n            const newList = state.list.filter((elem)=> elem.id !== action.id)\n            return {\n                ...state,\n                list: newList\n              \n            }\n        \n        case \"REMOVE_TODO\":\n\n        return{\n            ...state,\n            list:[]\n        }\n\n\n        default: return state; //inital value undefine na ho ishliye default state ki value return krdo\n    }\n}\n\nexport default todoReducers;\n","import changeTheNumber from \"./incDec\";\n\nimport todoReducers from './todoReducers';\n\n//multiple reducers ko ek sath rkhne k liye\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n   // changeTheNumber : changeTheNumber\n   changeTheNumber,\n   todoReducers\n});\n\nexport default rootReducer;","import  {createStore} from \"redux\";\nimport rootReducer from \"./reducers/index\"; //yeh reducers mese index.js se aaya\n\n//ish store ko jo bhi call krega vo data access kr skta h.. store ab state hai\nconst store = createStore(rootReducer);\n\nexport default store;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from \"react-redux\"\n\n// store.subscribe(()=>{\n//   console.log(store.getState())\n// })\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}